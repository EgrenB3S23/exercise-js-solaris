:root {
	/* hardcodade värden för planeters omkrets. */
	--circumfSunInitial: 4379000;
	--circumfMercuryInitial: 15329;
	--circumfVenusInitial: 38025;
	--circumfEarthInitial: 40075;
	--circumfMarsInitial: 21344;
	--circumfJupiterInitial: 439264;
	--circumfSaturnInitial: 378675;
	--circumfUranusInitial: 160590;
	--circumfNeptuneInitial: 155600;

	/* finjustering... */
	--circumfSun: calc(var(--circumfSunInitial) * 0.05);
	--circumfMercury: calc(var(--circumfMercuryInitial));
	--circumfVenus: calc(var(--circumfVenusInitial));
	--circumfEarth: calc(var(--circumfEarthInitial));
	--circumfMars: calc(var(--circumfMarsInitial));
	--circumfJupiter: calc(var(--circumfJupiterInitial) / 3);
	--circumfSaturn: calc(var(--circumfSaturnInitial) / 3);
	--circumfUranus: calc(var(--circumfUranusInitial) / 3);
	--circumfNeptune: calc(var(--circumfNeptuneInitial) / 3);

	/* och en enom(-t liten) multiplier där unit tas med */
	--sizeMultiplier: 0.00005rem;
}

* {
	box-sizing: border-box;
	margin: 0;
}

body {
	width: 100%;
	height: 100%;
	background: linear-gradient(to left, #0b1a34, #11264e);
	color: white;
	display: flex;
	flex-direction: column;
	align-items: center;

	h1 {
		color: white;
		text-align: center;
		font-family: "Orbitron", sans-serif;
		font-size: 3rem;
		margin-top: 2rem;
	}
}

.system {
	min-width: 600px;
	width: 80%;
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
	gap: 16px;
	margin-top: 12rem;
}

.planet {
	min-width: 1rem;
	aspect-ratio: 1;
	border-radius: 1000px;
	display: flex;
	justify-content: space-around;
	align-items: center;
	text-align: center;
	justify-items: center;
	cursor: pointer;
}

#solen {
	background-color: #ffd028;
	--sizeLocal: calc(var(--circumfSun) * var(--sizeMultiplier));
	min-width: var(--sizeLocal);
}

#merkurius {
	background-color: #8d8b85;
	--sizeLocal: calc(var(--circumfMercury) * var(--sizeMultiplier));
	width: var(--sizeLocal);
}

#venus {
	background-color: #e7cccb;
	--sizeLocal: calc(var(--circumfVenus) * var(--sizeMultiplier));
	width: var(--sizeLocal);
}

#jorden {
	background-color: #428ed5;
	--sizeLocal: calc(var(--circumfEarth) * var(--sizeMultiplier));
	width: var(--sizeLocal);
}

#mars {
	background-color: #f05f5f;
	--sizeLocal: calc(var(--circumfMars) * var(--sizeMultiplier));
	width: var(--sizeLocal);
}

#jupiter {
	background-color: #e29468;
	--sizeLocal: calc(var(--circumfJupiter) * var(--sizeMultiplier));
	width: var(--sizeLocal);
	margin: 0 2%; /* lite extra utrymme för månarna */
}

#saturnus {
	background-color: #c7aa72;
	--sizeLocal: calc(var(--circumfSaturn) * var(--sizeMultiplier));
	width: var(--sizeLocal);
	display: flex;
	align-items: center;
	justify-content: center;
	position: relative;
	margin: 0 4%; /* lite extra utrymme för månarna */
}

#uranus {
	background-color: #c9d4f1;
	--sizeLocal: calc(var(--circumfUranus) * var(--sizeMultiplier));
	width: var(--sizeLocal);
	margin: 0 1%; /* lite extra utrymme för månarna */
}

#neptunus {
	background-color: #7a92a7;
	--sizeLocal: calc(var(--circumfNeptune) * var(--sizeMultiplier));
	width: var(--sizeLocal);
}

#saturnus::before {
	content: "";
	position: absolute;
	top: 50%;
	left: 50%;
	width: 2%;
	height: 200%;
	border: 0.1rem solid rgba(255, 255, 255, 0.4);
	border-radius: 50%;
	transform: translate(-50%, -50%) rotate(60deg);
	pointer-events: none;
	box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
}

button {
	margin-top: 10rem;
	padding: 10px 20px;
	font-size: 25px;
	font-family: "Orbitron", sans-serif;
	color: white;
	background: linear-gradient(145deg, #0b1a34, #0f2247);
	border: 2px solid #ffffff;
	border-radius: 5px;
	cursor: pointer;
	text-align: center;
	text-decoration: none;
	transition: background 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease;
}

button:hover {
	border: 1px solid;
	box-shadow: inset 0 0 20px rgba(255, 255, 255, 0.5), 0 0 20px rgba(255, 255, 255, 0.2);
	outline-color: rgba(255, 255, 255, 0);
	outline-offset: 15px;
	text-shadow: 1px 1px 2px #427388;
}

.center-button {
	display: flex;
	justify-content: center;
}

.moon {
	/*
	to spread the moons out, we generate some pseudorandom numbers based on --i-moon
	(--i-moon ranges from 0 to n-1 where n is the number of moons belonging to the same planet. It is set inline by each ".moon" element.
	--i-planet (which is set the same way, but for each planet) can be used as well to prevent Jupiter's moons from behaving the same as Saturn's moons, for example
	
	the exact formulas below aren't all that important. What's important is sin(--i-moon)
	*/

	--noise: calc(sin(calc(var(--i-moon) + calc(var(--i-planet) * 200)) * 200)); /* range: -1..1 */
	--noise-rot: calc(var(--noise) * 10000deg); /* range: many, many "laps" (1 lap = 360deg) removing or adding another zero really doesn't matter. Affects starting orbit position for each moon. */
	--noise-scale: calc(1 + calc(calc(0.125 * sin(calc(var(--i-moon) * 1))))); /* range: 0.875 .. 1.125 */
	--noise-red: calc(calc(sin(calc(var(--i-moon) * 100)) + 1) / 2); /* range: 0..1 */
	--noise-green: calc(calc(sin(calc(var(--i-moon) * 160)) + 1) / 2); /* range: 0..1 */
	--noise-blue: calc(calc(sin(calc(var(--i-moon) * 240)) + 1) / 2); /* range: 0..1 */
	--red: calc(calc(var(--noise-red) * 40) + 60); /* range: 60..100 */
	--green: calc(calc(var(--noise-green) * 30) + 50); /* range: 50..80 */
	--blue: calc(calc(var(--noise-blue) * 30) + 50); /* range: 50..80 */

	--orbit-ratio-skew: 4; /* higher value: smaller difference in orbit speed between first closest and farthest moon */
	--orbit-time-multiplier: calc(calc(var(--orbit-ratio-skew) + var(--i-moon)) / var(--orbit-ratio-skew)); /* = (i+skew)/skew */

	background-color: rgba(var(--red), var(--green), var(--blue), 1);
	width: calc(0.35rem * var(--noise-scale));
	aspect-ratio: 1;
	border-radius: 10000px;
	position: absolute;
	transform-origin: 50% 50%;

	/* make the moons orbit! */
	transform: translateY(0.26rem) translateY(calc(calc(var(--i-moon) * calc(0.125rem / var(--noise-scale))) + calc(var(--sizeLocal) * 0.5)));
	scale: calc(var(--noise-scale));
	animation: orbit calc(5s * var(--orbit-time-multiplier)) linear 0s infinite normal forwards;
	animation-composition: add;
}

@keyframes orbit {
	from {
		rotate: var(--noise-rot);
	}
	to {
		rotate: calc(var(--noise-rot) + 360deg);
	}
}
